# fserv-0.20
# HTTP host configured to stream audio data: proxy and local

host "localhost" {

	path "/" {
		handler "http.static-file" {
			root "www/"
		}
	}

	target "/proxy-stream" {
		handler "broadcast.icy" {

			provider "broadcast.icy-client" {

				proxy "http-proxy.proxy" {
					connect_to "net.connect" {
						server {
							url "http://shoutcast-radio:8080"
						}
						server {
							url "http://shoutcast-radio:8081"
						}
					}
					request_headers {
						"Icy-MetaData" "1"
					}
					stream_response true
					response_body_buffer 32k
				}

				store {
					# Directory where the recorded files are stored
					directory "rec/stream1"

					# Preallocate disk space when writing to a file
					preallocate 5m

					# Don't store small files
					min_size 200k

					# If TRUE, replace spaces in file name with dots
					use_spaces false

					# Use current time while generating file name
					use_time true

					# Use info from meta while generating file name
					use_meta true

					# off | lower | upper | wordupper
					change_case off
				}
			}

			name "Cool proxy Radio"
			genre "genre"
			url "http://url/"

			# log {
				# Debug "log/stream1.log"
				# Level debug
			# }

			# connect to the data provider on demand
			always_on false

			reconnect_timeout 5

			buffer_size 16k

			# Buffer length (in msec)
			buffer_ms 5000

			# the time before the stream is suspended if always_on=false.  in sec.
			stop_delay 15
		}
	}

	target "/local-stream" {
		handler "broadcast.icy" {

			provider "broadcast.icy-mp3" {
				# the list of files to stream
				load_list "/path/to/list.m3u"

				first_track 1
			}

			name "Cool Radio"
			genre "genre"
			url "http://url/"

			icy_meta_int 32k

			# (=false)
			always_on true

			# must be multiple of system pagesize
			# buffer_size 64k
		}
	}
}
