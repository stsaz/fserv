# fserv-0.25
# The configuration file with all supported options and their default values.

# Server root directory.
# The parameter is required.
root "/usr/local/fserv"

pidfile "log/fserv.pid"

event_pool 64

# in ms.
timer_resolution 250

# Maximum file descriptor number that can be opened by the process. UNIX only.
# (=system default)
# max_fd_number 40

mod "log.log" {
	# hide | local | utc
	time local

	# in ms
	flush_delay 2000
}

log "log.log" {
	# Copy all data to standard output
	pass_to_std false

	# error | warn | info | debug
	level info

	# all, flow, net, http-filters
	# debug_levels all

	/* debug gzip {
		file "log/debug.log.gz"
		buffer_size 4k

		# 1-9
		gzip_level 6

		# 1k-256k
		gzip_buffer_size 4k
	} */

	/*debug "file" {
		file "log/debug.log"

		# 0 - flush immediately
		buffer_size 4k
	}*/

	error_info "file" {
		file "log/error.log"
	}

	access "file" {
		# in seconds
		# 0 = never
		rotate_every 0

		file "log/access.log"
	}
}

mod "cache.mem" {
}

mod "cache.file" {
}

# mod "ssl.ssl" {
# }

mod "net.listen" {
	# log "log.log" {
	# }

	max_clients 10000
}

mod "net.resolve" {
	# log "log.log" {
	# }

	# IP address of DNS server
	server "8.8.8.8"
	server "8.8.4.4"

	# Support response datagrams larger than 512 bytes.
	edns false

	# Response buffer size.  Minimum value is 512.
	buffer_size 512

	cache "cache.mem" {
		max_items 1000
	}

	# Resend query several times before giving up
	max_tries 3

	# Resend query if response is not received within this time (in milliseconds)
	retry_timeout 1000

	# Lookup IPv6 addresses
	ipv6 true
}

mod "net.connect" {
	# log "log.log" {
	# }

	max_connections 10000

	dns_resolver "net.resolve" {
	}
}

mod "http-proxy.proxy" {
	# log "log.log" {
	# }

	socket_option {
		tcp_nodelay true
		# recv_buffer 32k
		# recv_lowat 1k
		# send_buffer 32k
	}
}

# Shows status of each active module
mod "http.status" {
	# in ms.
	update_interval 500

	modules "net.listen" "http.http" "net.connect" "net.resolve" "http-proxy.proxy" "cache.mem" "log.log"
}

mod "http.errdoc" {
	template "conf/error.html"
}

mod "http.static-file" {
	cache "cache.mem" {
	}

	include "conf/mime.conf"
}

mod "http.dir-index" {
	cache "cache.mem" {
	}

	template "conf/dir_index.html"
	show_hidden false
}

mod "http.gzip" {
}

mod "http.http" {
	# log "log.log" {
	# }

	read_header_timeout 65
	keepalive_timeout 65

	read_header_growby 1024
	max_header_size 8k
	max_keepalive_requests 64

	error_handler "http.errdoc" {
	}

	socket_option {
		# Enable TCP NoDelay option
		tcp_nodelay true

		# (=system default)
		# recv_buffer 32k

		# (=system default)
		# recv_lowat 1k

		# (=system default)
		# send_buffer 32k
	}

	server "net.listen" {
		# Listening address.  The parameter is required.
		# "[::1]:80" (IPv6)
		# "127.0.0.1:80" (IPv4)
		# ":80" (both IPv6 and IPv4).
		listen ":8080"

		# Listener backlog
		# (=system default)
		# backlog 1000

		# Lingering timeout in seconds
		linger_timeout 30

		# log {
		# }

		# Enable TCP defer-accept option on the listening sockets. Not supported on Windows.
		# Linux: enabled by default.
		# FreeBSD: disabled by default.  Enable only after executing 'kldload accf_data'.
		# tcp_defer_accept true
	}

	# server "net.listen" {
		# listen ":443"
		# ssl "ssl.ssl"
	# }

	# syntax: "include FILE ...", where FILE can be a wildcard, e.g. include "conf/http-*.conf"
	include "conf/static.conf"
	# include "conf/revproxy.conf"
	# include "conf/fwdproxy.conf"
}
